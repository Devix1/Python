from email import message
import types
from aiogram import F, Router, Bot
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command
import app.keyboards as kb


router = Router()




@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer('üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Training Plan üåü \n\n–¢—ã –≥–æ—Ç–æ–≤ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –∂–∏–∑–Ω—å –∏ –¥–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö —Ñ–∏—Ç–Ω–µ—Å-—Ü–µ–ª–µ–π? üí™ü•ó\n\n–ù–∞—à –±–æ—Ç ‚Äî —Ç–≤–æ–π –ª–∏—á–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä –∏ –¥–∏–µ—Ç–æ–ª–æ–≥, –¥–æ—Å—Ç—É–ø–Ω—ã–π 24/7! \n\nüîπ –ß—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º?\n- –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–ª–∞–Ω—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –¥–ª—è –ª—é–±–æ–≥–æ —É—Ä–æ–≤–Ω—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏: –æ—Ç –Ω–æ–≤–∏—á–∫–∞ –¥–æ –ø—Ä–æ—Ñ–∏!\n- –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ –¥–æ—Å—Ç–∏—á—å –∂–µ–ª–∞–µ–º—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: –Ω–∞–±–æ—Ä –º–∞—Å—Å—ã, –ø–æ—Ö—É–¥–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞.\n- –£–¥–æ–±–Ω—ã–π –∏ –ø—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –≤—Å–µ–≥–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª–∏–∫–æ–≤ ‚Äî –∏ —Ç–≤–æ–π –ø–ª–∞–Ω –≥–æ—Ç–æ–≤!\n\nüîπ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?\n1. –ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.\n2. –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç: –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏–ª–∏ –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è.\n3. –û—Ç–≤–µ—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –æ —Å–≤–æ–µ–º –ø–æ–ª–µ, —Ü–µ–ª–∏ –∏ —Å—Ç–∞–∂–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.\n4. –ü–æ–ª—É—á–∏ —Å–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω –∏ –Ω–∞—á–Ω–∏ –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏!\n\nüéØ –ù–µ —É–ø—É—Å—Ç–∏ —à–∞–Ω—Å —Å—Ç–∞—Ç—å –ª—É—á—à–µ!\n–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞–º –∏ –Ω–∞—á–Ω–∏ —Å–≤–æ–π –ø—É—Ç—å –∫ –∏–¥–µ–∞–ª—å–Ω–æ–º—É —Ç–µ–ª—É —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!\n\nüëâ Training Plan ‚Äî —Ç–≤–æ–π –Ω–∞–¥–µ–∂–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ —Ñ–∏—Ç–Ω–µ—Å–∞! \n\nüí¨ –ù–∞–ø–∏—à–∏ –Ω–∞–º –∏ –Ω–∞—á–Ω–∏ —Å–≤–æ–π –ø—É—Ç—å –∫ —É—Å–ø–µ—Ö—É!' , reply_markup=kb.main)

@router.message(Command('tgk'))
async def cmd_tgk(message: Message):
    await message.answer('–ù–µ –∑–∞–±—É–¥—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è \n https://t.me/freekazuketr')

@router.message(Command('help'))
async def cmd_help(message: Message):
    await message.answer('–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç—å—Å—è –∫ @Freekazuke ')


@router.message(F.text == '–ü–æ–ª—É—á–∏—Ç—å –ø–ª–∞–Ω—ã üóíÔ∏è')
async def plans(message: Message):
    await message.answer('–í—ã–±–∏—Ä–∏—Ç–µ –ø–ª–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å:', reply_markup=kb.plans)

@router.message(F.text == '–ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª ‚úâÔ∏è')
async def Tgk(message: Message):
    await message.answer('–ù–µ –∑–∞–±—É–¥—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è! \n https://t.me/freekazuketr')






@router.callback_query(F.data == 'trainingPlan')
async def trainingPlan(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –í–∞—à –ø–æ–ª?', reply_markup=kb.floor1)

@router.callback_query(F.data == 'foodPlan')
async def foodPlan(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è \n –í–∞—à –ø–æ–ª?', reply_markup=kb.floor)




@router.callback_query(F.data == 'men1')
async def men1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è \n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π \n –í–∞—à–∞ —Ü–µ–ª—å? ', reply_markup=kb.target2)

@router.callback_query(F.data == 'woman1')
async def men1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å? ', reply_markup=kb.target2girl)

@router.callback_query(F.data == 'men1.1')
async def men1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π \n –í–∞—à–∞ —Ü–µ–ª—å? ', reply_markup=kb.target1)

@router.callback_query(F.data == 'woman1.1')
async def men1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å? ', reply_markup=kb.target)













@router.callback_query(F.data == 'maintenance2')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è \n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ \n –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω—ã–Ω–µ—à–Ω–∏–π –≤–µ—Å:')

@router.callback_query(F.data == 'weight_loss2')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è \n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ—Ö—É–¥–µ–Ω–∏–µ \n –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω—ã–Ω–µ—à–Ω–∏–π –≤–µ—Å: ' )

@router.callback_query(F.data == 'kit2')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è\n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ù–∞–±–æ—Ä \n –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω—ã–Ω–µ—à–Ω–∏–π –≤–µ—Å:' )


@router.callback_query(F.data == 'maintenance2.1')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ \n –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω—ã–Ω–µ—à–Ω–∏–π –≤–µ—Å: ' )

@router.callback_query(F.data == 'weight_loss2.1')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ—Ö—É–¥–µ–Ω–∏–µ \n –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω—ã–Ω–µ—à–Ω–∏–π –≤–µ—Å:' )

@router.callback_query(F.data == 'kit2.1')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ù–∞–±–æ—Ä \n –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω—ã–Ω–µ—à–Ω–∏–π –≤–µ—Å:  ')















@router.callback_query(F.data == 'maintenance1')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ \n –í–∞—à —Å—Ç–∞–∂? '
                                  , reply_markup=kb.experience3)

@router.callback_query(F.data == 'weight_loss1')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ—Ö—É–¥–µ–Ω–∏–µ \n –í–∞—à —Å—Ç–∞–∂? '
                                  , reply_markup=kb.experience2)

@router.callback_query(F.data == 'kit1')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ù–∞–±–æ—Ä \n –í–∞—à —Å—Ç–∞–∂? '
                                  , reply_markup=kb.experience)


@router.callback_query(F.data == 'maintenance1.1')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ \n –í–∞—à —Å—Ç–∞–∂? '
                                  , reply_markup=kb.experience31)

@router.callback_query(F.data == 'weight_loss1.1')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ—Ö—É–¥–µ–Ω–∏–µ \n –í–∞—à —Å—Ç–∞–∂? '
                                  , reply_markup=kb.experience21)

@router.callback_query(F.data == 'kit1.1')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ù–∞–±–æ—Ä \n –í–∞—à —Å—Ç–∞–∂? '
                                  , reply_markup=kb.experience1)







@router.callback_query(F.data == 'One')
async def one(callback: CallbackQuery):
    file_patch = 'W:\Code\–†–∞–±–æ—Ç—ã\TG\TGBotPython'
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ù–∞–±–æ—Ä \n –í–∞—à —Å—Ç–∞–∂: < 1 –≥–æ–¥–∞\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: ' )
@router.callback_query(F.data == 'OneThree')
async def one(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ù–∞–±–æ—Ä \n –í–∞—à —Å—Ç–∞–∂: 1-3 –≥–æ–¥–∞\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:')
@router.callback_query(F.data == 'Three')
async def one(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ù–∞–±–æ—Ä \n –í–∞—à —Å—Ç–∞–∂: > 3 –ª–µ—Ç\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:')

@router.callback_query(F.data == 'One1')
async def one(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ù–∞–±–æ—Ä \n –í–∞—à —Å—Ç–∞–∂: < 1 –≥–æ–¥–∞\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:')
@router.callback_query(F.data == 'OneThree1')
async def one(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π  \n –í–∞—à–∞ —Ü–µ–ª—å: –ù–∞–±–æ—Ä \n –í–∞—à —Å—Ç–∞–∂: 1-3 –≥–æ–¥–∞\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:')
@router.callback_query(F.data == 'Three1')
async def one(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ù–∞–±–æ—Ä \n –í–∞—à —Å—Ç–∞–∂: > 3 –ª–µ—Ç\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:')







@router.callback_query(F.data == 'One2')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ—Ö—É–¥–µ–Ω–∏–µ \n –í–∞—à —Å—Ç–∞–∂: > 1 –≥–æ–¥–∞\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:')
@router.callback_query(F.data == 'OneThree2')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ—Ö—É–¥–µ–Ω–∏–µ \n –í–∞—à —Å—Ç–∞–∂: 1-3 –≥–æ–¥–∞\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:')
@router.callback_query(F.data == 'Three2')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ—Ö—É–¥–µ–Ω–∏–µ \n –í–∞—à —Å—Ç–∞–∂: > 3 –ª–µ—Ç\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:')

@router.callback_query(F.data == 'One21')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ—Ö—É–¥–µ–Ω–∏–µ \n –í–∞—à —Å—Ç–∞–∂: > 1 –≥–æ–¥–∞\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:')
@router.callback_query(F.data == 'OneThree21')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ—Ö—É–¥–µ–Ω–∏–µ \n –í–∞—à —Å—Ç–∞–∂: 1-3 –≥–æ–¥–∞\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:')
@router.callback_query(F.data == 'Three21')
async def maintenance1(callback: CallbackQuery): 
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ—Ö—É–¥–µ–Ω–∏–µ \n –í–∞—à —Å—Ç–∞–∂: > 3 –ª–µ—Ç\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:')
    

@router.callback_query(F.data == 'One3')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ \n –í–∞—à —Å—Ç–∞–∂: < 1 –≥–æ–¥–∞\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:')
@router.callback_query(F.data == 'OneThree3')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ \n –í–∞—à —Å—Ç–∞–∂: 1-3 –≥–æ–¥–∞\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:')
@router.callback_query(F.data == 'Three3')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ \n –í–∞—à —Å—Ç–∞–∂: > 3 –ª–µ—Ç\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:')

@router.callback_query(F.data == 'One31')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ \n –í–∞—à —Å—Ç–∞–∂: < 1 –≥–æ–¥–∞\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:')
@router.callback_query(F.data == 'OneThree31')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ \n –í–∞—à —Å—Ç–∞–∂: 1-3 –≥–æ–¥–∞\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:')
@router.callback_query(F.data == 'Three31')
async def maintenance1(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
    await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω \n –ü–æ–ª: –ú—É–∂—Å–∫–æ–π \n –í–∞—à–∞ —Ü–µ–ª—å: –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ \n –í–∞—à —Å—Ç–∞–∂: > 3 –ª–µ—Ç\n –í–æ—Ç –≤–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:' )
